/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package newtodolist;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JFrame;
import javax.swing.ImageIcon;
/**
 *
 * @author HP
 */
public class todo extends javax.swing.JFrame {
    private DefaultListModel<String> taskListModel; // Model for the task list
    private JList<String> taskList; // List to display tasks

    /**
     * Creates new form todo
     */
    
    public todo() {
       initComponents();

       ImageIcon icon = new ImageIcon(getClass().getResource("/note.jpeg"));
        this.setIconImage(icon.getImage()); //add logo at the top
       
     setLocationRelativeTo(null); //coding frame centred screen
     
       // Initialize the model and task list
        taskListModel = new DefaultListModel<>();
        taskList = new JList<>(taskListModel); // Initialize task list with model
        
        // Add the task list to the scroll pane
        JScrollPane taskScrollPane = new JScrollPane(taskList);
        taskScrollPane.setPreferredSize(new Dimension(317, 270)); // scroll pane

        // Add the scroll pane containing the task list to the panel
         jPanel1.setLayout(new BorderLayout()); // Set layout to BorderLayout for proper alignment
        jPanel1.add(taskScrollPane, BorderLayout.CENTER); // Add the scroll pane to the center of the panel
        
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        entertask = new java.awt.TextField();
        removetask = new javax.swing.JButton();
        addtask = new javax.swing.JButton();
        counttask = new javax.swing.JButton();
        Searchlist = new javax.swing.JTextField();
        searchbuttonn = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 317, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 58, -1, -1));

        entertask.setBackground(new java.awt.Color(242, 242, 242));
        entertask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entertaskActionPerformed(evt);
            }
        });
        jPanel3.add(entertask, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 352, 360, 49));

        removetask.setBackground(new java.awt.Color(255, 255, 153));
        removetask.setText("Remove Task");
        removetask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removetaskActionPerformed(evt);
            }
        });
        jPanel3.add(removetask, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, -1, -1));

        addtask.setBackground(new java.awt.Color(255, 255, 153));
        addtask.setText("Add task");
        addtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtaskActionPerformed(evt);
            }
        });
        jPanel3.add(addtask, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 80, -1));

        counttask.setBackground(new java.awt.Color(255, 255, 153));
        counttask.setText("Count Task");
        counttask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counttaskActionPerformed(evt);
            }
        });
        jPanel3.add(counttask, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 100, -1));

        Searchlist.setText("                           ");
        Searchlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchlistActionPerformed(evt);
            }
        });
        jPanel3.add(Searchlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 14, 249, -1));

        searchbuttonn.setText("Search ");
        searchbuttonn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchbuttonn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonnActionPerformed(evt);
            }
        });
        jPanel3.add(searchbuttonn, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 6, 75, 39));

        exit.setBackground(new java.awt.Color(255, 255, 153));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jPanel3.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 80, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bluebackground.jpg"))); // NOI18N
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 380, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    
    
    
    
    
    private void addtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtaskActionPerformed
        // TODO add your handling code here:
     // Get the text from the text field
    String customTask = entertask.getText().trim();

    // If the text field is not empty, add the task to the list model
    if (!customTask.isEmpty()) {
        taskListModel.addElement(customTask); // Adds task to the DefaultListMode
        entertask.setText(""); // Clear the text field after adding the task
    } else {
        JOptionPane.showMessageDialog(this, "Please enter a task!");
    }
    }//GEN-LAST:event_addtaskActionPerformed

    
    
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
          int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Exit Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    
    }//GEN-LAST:event_exitActionPerformed

    private void counttaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counttaskActionPerformed
        // TODO add your handling code here:
         JOptionPane.showMessageDialog(this, "Total tasks: " + taskListModel.getSize());
    
    }//GEN-LAST:event_counttaskActionPerformed

    private void removetaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removetaskActionPerformed
        // TODO add your handling code here:
        String selectedTask = taskList.getSelectedValue();
        if (selectedTask != null) {
            taskListModel.removeElement(selectedTask);
        } else {
            JOptionPane.showMessageDialog(this, "Select a task to remove!");
        }
    }//GEN-LAST:event_removetaskActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    private void SearchlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchlistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchlistActionPerformed

    private void searchbuttonnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonnActionPerformed
        // TODO add your handling code here:
      // TODO add your handling code here:
String searchTerm = Searchlist.getText().trim().toLowerCase(); // Get the search term
if (searchTerm.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter a search term!");
    return;
}

boolean taskFound = false; // Flag to check if any task is found

try {
    for (int i = 0; i < taskListModel.getSize(); i++) {
        String task = taskListModel.getElementAt(i).toLowerCase(); // Get the task in lowercase
        if (task.contains(searchTerm)) { // Check if the task contains the search term
            taskList.setSelectedIndex(i); // Select the found task
            taskList.ensureIndexIsVisible(i); // Scroll to the found task
            taskFound = true; // Set flag to true
            break; // Exit the loop after finding the first match
        }
    }

    if (!taskFound) {
        throw new Exception("No task matches the search term: " + searchTerm);
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage(), "Search Error", JOptionPane.WARNING_MESSAGE);
}

    }//GEN-LAST:event_searchbuttonnActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(todo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(todo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(todo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(todo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new todo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Searchlist;
    public javax.swing.JButton addtask;
    public javax.swing.JButton counttask;
    public java.awt.TextField entertask;
    public javax.swing.JButton exit;
    public javax.swing.JComboBox<String> jComboBox1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    public java.awt.Menu menu1;
    public java.awt.Menu menu2;
    public java.awt.MenuBar menuBar1;
    public javax.swing.JButton removetask;
    public javax.swing.JButton searchbuttonn;
    // End of variables declaration//GEN-END:variables
}
